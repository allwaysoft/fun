
declare

v_cnt      NUMBER;
v_cnt_conv NUMBER;
v_cnt_prod NUMBER;
record_count_mismatch exception;

begin
for i in
(
SELECT 
  SCCTRL_COMP_CODE,
  SCCTRL_INV_ENTRY_STATE,
  SCCTRL_VAT_CODE,
  SCCTRL_HLDBK_PCT,
  SCCTRL_TENDPACK_MANDATORY_FLAG,
  SCCTRL_INV_SERIES_CODE,
  SCCTRL_DEFAULT_CAT_CODE,
  SCCTRL_ALLOW_AUTO_COMPL_FLAG,
  SCCTRL_BANK_ACCT_FLAG,
  SCCTRL_DOCUMENT_PRINT_METHOD,
  SCCTRL_MESSAGE_TYPE_CODE,
  SCCTRL_AUTO_HOLD_FLAG,
  SCCTRL_SEP_REQ_FOR_CHG_FLAG,
  SCCTRL_PAY_REQ_APPRV_REQ_FLAG,
  SCCTRL_USE_PAY_WHEN_PAID_FLAG,
  SCCTRL_DEFAULT_COMPL_PERIOD,
  SCCTRL_PRINT_TASK_DET_FLAG,
  SCCTRL_DEFAULT_TAXES_FLAG,
  SCCTRL_DEFAULT_CURRENT_DATE,
  SCCTRL_HLDBK_RLS_FROM_SC,
  SCCTRL_PAY_WHEN_PAID_DAYS,
  SCCTRL_SEP_VOU_PER_JOB_FLAG,
  SCCTRL_INVOICE_HOLD_FLAG,
  SCCTRL_PRINT_JOB_NAME_ON_CHECK,
  SCCTRL_AUTO_DRAW_NUM_FLAG,
  SCCTRL_KEEP_FUTURE_DUE_DATE,
  --SCCTRL__IU__CREATE_DATE,
  --SCCTRL__IU__CREATE_USER,
  --SCCTRL__IU__UPDATE_DATE,
  --SCCTRL__IU__UPDATE_USER,
  SCCTRL_DEFAULT_DATES_FLAG,
  SCCTRL_SC_MASK,
  SCCTRL_SC_MASK_OVERRIDE_FLAG,
  SCCTRL_AUTO_SC_NUMBER_FLAG,
  SCCTRL_VEN_ADD_REQ_FLAG,
  SCCTRL_ALTERNATE_ADDRESS_EXIST,
  SCCTRL_REMIT_TO_ADDRESS_FLAG,
  SCCTRL_SEQUENCING_WITHIN_JOB,
  SCCTRL_REVERSE_JOB_MASK_FLAG,
  SCCTRL_FILTER_FLAG_DFLT_VALUE
FROM DA.SCCONTROL@CONV 
WHERE SCCTRL_COMP_CODE not in ('ZZ')
) loop
INSERT INTO DA.SCCONTROL
(  
  SCCTRL_COMP_CODE,
  SCCTRL_INV_ENTRY_STATE,
  SCCTRL_VAT_CODE,
  SCCTRL_HLDBK_PCT,
  SCCTRL_TENDPACK_MANDATORY_FLAG,
  SCCTRL_INV_SERIES_CODE,
  SCCTRL_DEFAULT_CAT_CODE,
  SCCTRL_ALLOW_AUTO_COMPL_FLAG,
  SCCTRL_BANK_ACCT_FLAG,
  SCCTRL_DOCUMENT_PRINT_METHOD,
  SCCTRL_MESSAGE_TYPE_CODE,
  SCCTRL_AUTO_HOLD_FLAG,
  SCCTRL_SEP_REQ_FOR_CHG_FLAG,
  SCCTRL_PAY_REQ_APPRV_REQ_FLAG,
  SCCTRL_USE_PAY_WHEN_PAID_FLAG,
  SCCTRL_DEFAULT_COMPL_PERIOD,
  SCCTRL_PRINT_TASK_DET_FLAG,
  SCCTRL_DEFAULT_TAXES_FLAG,
  SCCTRL_DEFAULT_CURRENT_DATE,
  SCCTRL_HLDBK_RLS_FROM_SC,
  SCCTRL_PAY_WHEN_PAID_DAYS,
  SCCTRL_SEP_VOU_PER_JOB_FLAG,
  SCCTRL_INVOICE_HOLD_FLAG,
  SCCTRL_PRINT_JOB_NAME_ON_CHECK,
  SCCTRL_AUTO_DRAW_NUM_FLAG,
  SCCTRL_KEEP_FUTURE_DUE_DATE,
  --SCCTRL__IU__CREATE_DATE,
  --SCCTRL__IU__CREATE_USER,
  --SCCTRL__IU__UPDATE_DATE,
  --SCCTRL__IU__UPDATE_USER,
  SCCTRL_DEFAULT_DATES_FLAG,
  SCCTRL_SC_MASK,
  SCCTRL_SC_MASK_OVERRIDE_FLAG,
  SCCTRL_AUTO_SC_NUMBER_FLAG,
  SCCTRL_VEN_ADD_REQ_FLAG,
  SCCTRL_ALTERNATE_ADDRESS_EXIST,
  SCCTRL_REMIT_TO_ADDRESS_FLAG,
  SCCTRL_SEQUENCING_WITHIN_JOB,
  SCCTRL_REVERSE_JOB_MASK_FLAG,
  SCCTRL_FILTER_FLAG_DFLT_VALUE
)
values
(
i.  SCCTRL_COMP_CODE,
i.    SCCTRL_INV_ENTRY_STATE,
i.    SCCTRL_VAT_CODE,
i.    SCCTRL_HLDBK_PCT,
i.    SCCTRL_TENDPACK_MANDATORY_FLAG,
i.    SCCTRL_INV_SERIES_CODE,
i.    SCCTRL_DEFAULT_CAT_CODE,
i.    SCCTRL_ALLOW_AUTO_COMPL_FLAG,
i.    SCCTRL_BANK_ACCT_FLAG,
i.    SCCTRL_DOCUMENT_PRINT_METHOD,
i.    SCCTRL_MESSAGE_TYPE_CODE,
i.    SCCTRL_AUTO_HOLD_FLAG,
i.    SCCTRL_SEP_REQ_FOR_CHG_FLAG,
i.    SCCTRL_PAY_REQ_APPRV_REQ_FLAG,
i.    SCCTRL_USE_PAY_WHEN_PAID_FLAG,
i.    SCCTRL_DEFAULT_COMPL_PERIOD,
i.    SCCTRL_PRINT_TASK_DET_FLAG,
i.    SCCTRL_DEFAULT_TAXES_FLAG,
i.    SCCTRL_DEFAULT_CURRENT_DATE,
i.    SCCTRL_HLDBK_RLS_FROM_SC,
i.    SCCTRL_PAY_WHEN_PAID_DAYS,
i.    SCCTRL_SEP_VOU_PER_JOB_FLAG,
i.    SCCTRL_INVOICE_HOLD_FLAG,
i.    SCCTRL_PRINT_JOB_NAME_ON_CHECK,
i.    SCCTRL_AUTO_DRAW_NUM_FLAG,
i.    SCCTRL_KEEP_FUTURE_DUE_DATE,
--i.    --SCCTRL__IU__CREATE_DATE,
--i.    --SCCTRL__IU__CREATE_USER,
--i.    --SCCTRL__IU__UPDATE_DATE,
--i.    --SCCTRL__IU__UPDATE_USER,
i.    SCCTRL_DEFAULT_DATES_FLAG,
i.    SCCTRL_SC_MASK,
i.    SCCTRL_SC_MASK_OVERRIDE_FLAG,
i.    SCCTRL_AUTO_SC_NUMBER_FLAG,
i.    SCCTRL_VEN_ADD_REQ_FLAG,
i.    SCCTRL_ALTERNATE_ADDRESS_EXIST,
i.    SCCTRL_REMIT_TO_ADDRESS_FLAG,
i.    SCCTRL_SEQUENCING_WITHIN_JOB,
i.    SCCTRL_REVERSE_JOB_MASK_FLAG,
i.    SCCTRL_FILTER_FLAG_DFLT_VALUE
);
end loop;
--commit;
select count(1) into v_cnt_conv from SCCONTROL@conv;
select count(1) into v_cnt_prod from SCCONTROL@prod;
if v_cnt_conv - v_cnt_prod = 0
then
dbms_output.put_line ('Number of records in PROD match with CONV for SCCONTROL table.');
else
dbms_output.put_line ('Number of records in PROD does not match with CONV for SCCONTROL table.');
Raise record_count_mismatch;
end if;
Select count(1) into v_cnt from DA.SCCONTROL@PROD where SCCTRL_COMP_CODE not in ('ZZ');
dbms_output.put_line ('Inserted '||v_cnt||' records into SCCONTROL table, check and commit.');
EXCEPTION
WHEN record_count_mismatch
THEN
DBMS_OUTPUT.PUT_LINE ('There is a mismatch in PROD and CONV for this table.');
WHEN OTHERS 
THEN
DBMS_OUTPUT.PUT_LINE ('ERROR WHILE INSERTING INTO DA.SCCONTROL.');
DBMS_OUTPUT.PUT_LINE (SQLERRM);

end;
/ 