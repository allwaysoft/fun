
SET VERIFY OFF 
SET serveroutput on size 1000000

accept from_which_database prompt 'Insert from which database:'
accept to_which_database prompt 'Insert to which database:'

declare

v_cnt      NUMBER;
v_cnt_&to_which_database NUMBER;
v_cnt_&from_which_database NUMBER;
record_count_mismatch exception;

begin

dbms_output.put_line(chr(9));

for i in
(
SELECT 
  JBCTRL_COMP_CODE,
  JBCTRL_AR_JOUR_CODE,
  JBCTRL_INTERNAL_VEN_CODE,
  JBCTRL_INTERNAL_VEN_DESC,
  JBCTRL_AR_SELF_INV_SER_CODE,
  JBCTRL_AR_SC_INV_SER_CODE,
  JBCTRL_CONT_TYPE,
  JBCTRL_DEFAULT_BILLING_TYPE,
  JBCTRL_DEFAULT_INV_FORMAT_CODE,
  JBCTRL_AUTO_APPROVE_CONT_FLAG,
  JBCTRL_AUTO_APPROVE_INV_FLAG,
  JBCTRL_MAX_GROUP_CAT_CODE,
  JBCTRL_MAX_CONT_CAT_CODE,
  JBCTRL_DEFAULT_JB_MAP_CODE,
  JBCTRL_MAT_STORED_INTERNAL,
  JBCTRL_DEFAULT_BILL_RATE_TABLE,
  JBCTRL_DEFAULT_MIN_CODE,
  JBCTRL_CONT_INV_APPRV_FLAG,
  JBCTRL_AIA_LICENSE_FLAG,
  JBCTRL_REV_GEN_BURDENS_FLAG,
  JBCTRL_REV_GEN_JOUR_CODE,
  JBCTRL_PM_CONTACT_ROLE,
  JBCTRL_DEFERRAL_DELETE_FLAG,
  JBCTRL_DISP_CONT_BUDGCHNG_FLAG,
  JBCTRL_USE_JOB_DEPT_FLAG,
  JBCTRL_USE_AKA_NAME_FLAG,
  JBCTRL_DEFAULT_TAX_FROM_SUBJOB,
  JBCTRL_EXCL_NONINV_RECITS,
  JBCTRL_SC_RFP_COST_FLAG,
  JBCTRL_VOID_SC_MAN_RFP_FLAG,
  --JBCTRL__IU__CREATE_DATE,
  --JBCTRL__IU__CREATE_USER,
  --JBCTRL__IU__UPDATE_DATE,
  --JBCTRL__IU__UPDATE_USER,
  JBCTRL_REL_MORE_RET_FLAG,
  JBCTRL_W_CAT_NO_BILL_CODE_FLAG,
  JBCTRL_INVOICE_LEVEL_RET_FLAG,
  JBCTRL_BILL_UNPOSTED_RFP_FLAG,
  JBCTRL_POST_DATE_DFLT_SD_FLAG,
  JBCTRL_BILL_UNAPPRVD_CONT_FLAG,
  JBCTRL_OVERRIDE_CONT_BUDGET,
  JBCTRL_RETRIEVE_BILLING_NAME,
  JBCTRL_SET_SELF_PERF_FLAG
FROM JBCTRL@&from_which_database
where jbctrl_comp_code not in ('ZZ')
) loop
INSERT INTO da.JBCTRL@&to_which_database
(  
  JBCTRL_COMP_CODE,
  JBCTRL_AR_JOUR_CODE,
  JBCTRL_INTERNAL_VEN_CODE,
  JBCTRL_INTERNAL_VEN_DESC,
  JBCTRL_AR_SELF_INV_SER_CODE,
  JBCTRL_AR_SC_INV_SER_CODE,
  JBCTRL_CONT_TYPE,
  JBCTRL_DEFAULT_BILLING_TYPE,
  JBCTRL_DEFAULT_INV_FORMAT_CODE,
  JBCTRL_AUTO_APPROVE_CONT_FLAG,
  JBCTRL_AUTO_APPROVE_INV_FLAG,
  JBCTRL_MAX_GROUP_CAT_CODE,
  JBCTRL_MAX_CONT_CAT_CODE,
  JBCTRL_DEFAULT_JB_MAP_CODE,
  JBCTRL_MAT_STORED_INTERNAL,
  JBCTRL_DEFAULT_BILL_RATE_TABLE,
  JBCTRL_DEFAULT_MIN_CODE,
  JBCTRL_CONT_INV_APPRV_FLAG,
  JBCTRL_AIA_LICENSE_FLAG,
  JBCTRL_REV_GEN_BURDENS_FLAG,
  JBCTRL_REV_GEN_JOUR_CODE,
  JBCTRL_PM_CONTACT_ROLE,
  JBCTRL_DEFERRAL_DELETE_FLAG,
  JBCTRL_DISP_CONT_BUDGCHNG_FLAG,
  JBCTRL_USE_JOB_DEPT_FLAG,
  JBCTRL_USE_AKA_NAME_FLAG,
  JBCTRL_DEFAULT_TAX_FROM_SUBJOB,
  JBCTRL_EXCL_NONINV_RECITS,
  JBCTRL_SC_RFP_COST_FLAG,
  JBCTRL_VOID_SC_MAN_RFP_FLAG,
  --JBCTRL__IU__CREATE_DATE,
  --JBCTRL__IU__CREATE_USER,
  --JBCTRL__IU__UPDATE_DATE,
  --JBCTRL__IU__UPDATE_USER,
  JBCTRL_REL_MORE_RET_FLAG,
  JBCTRL_W_CAT_NO_BILL_CODE_FLAG,
  JBCTRL_INVOICE_LEVEL_RET_FLAG,
  JBCTRL_BILL_UNPOSTED_RFP_FLAG,
  JBCTRL_POST_DATE_DFLT_SD_FLAG,
  JBCTRL_BILL_UNAPPRVD_CONT_FLAG,
  JBCTRL_OVERRIDE_CONT_BUDGET,
  JBCTRL_RETRIEVE_BILLING_NAME,
  JBCTRL_SET_SELF_PERF_FLAG
)
values
(
i.  JBCTRL_COMP_CODE,
i.  JBCTRL_AR_JOUR_CODE,
i.  JBCTRL_INTERNAL_VEN_CODE,
i.  JBCTRL_INTERNAL_VEN_DESC,
i.  JBCTRL_AR_SELF_INV_SER_CODE,
i.  JBCTRL_AR_SC_INV_SER_CODE,
i.  JBCTRL_CONT_TYPE,
i.  JBCTRL_DEFAULT_BILLING_TYPE,
i.  JBCTRL_DEFAULT_INV_FORMAT_CODE,
i.  JBCTRL_AUTO_APPROVE_CONT_FLAG,
i.  JBCTRL_AUTO_APPROVE_INV_FLAG,
i.  JBCTRL_MAX_GROUP_CAT_CODE,
i.  JBCTRL_MAX_CONT_CAT_CODE,
i.  JBCTRL_DEFAULT_JB_MAP_CODE,
i.  JBCTRL_MAT_STORED_INTERNAL,
i.  JBCTRL_DEFAULT_BILL_RATE_TABLE,
i.  JBCTRL_DEFAULT_MIN_CODE,
i.  JBCTRL_CONT_INV_APPRV_FLAG,
i.  JBCTRL_AIA_LICENSE_FLAG,
i.  JBCTRL_REV_GEN_BURDENS_FLAG,
i.  JBCTRL_REV_GEN_JOUR_CODE,
i.  JBCTRL_PM_CONTACT_ROLE,
i.  JBCTRL_DEFERRAL_DELETE_FLAG,
i.  JBCTRL_DISP_CONT_BUDGCHNG_FLAG,
i.  JBCTRL_USE_JOB_DEPT_FLAG,
i.  JBCTRL_USE_AKA_NAME_FLAG,
i.  JBCTRL_DEFAULT_TAX_FROM_SUBJOB,
i.  JBCTRL_EXCL_NONINV_RECITS,
i.  JBCTRL_SC_RFP_COST_FLAG,
i.  JBCTRL_VOID_SC_MAN_RFP_FLAG,
--i.  --JBCTRL__IU__CREATE_DATE,
--i.  --JBCTRL__IU__CREATE_USER,
--i.  --JBCTRL__IU__UPDATE_DATE,
--i.  --JBCTRL__IU__UPDATE_USER,
i.  JBCTRL_REL_MORE_RET_FLAG,
i.  JBCTRL_W_CAT_NO_BILL_CODE_FLAG,
i.  JBCTRL_INVOICE_LEVEL_RET_FLAG,
i.  JBCTRL_BILL_UNPOSTED_RFP_FLAG,
i.  JBCTRL_POST_DATE_DFLT_SD_FLAG,
i.  JBCTRL_BILL_UNAPPRVD_CONT_FLAG,
i.  JBCTRL_OVERRIDE_CONT_BUDGET,
i.  JBCTRL_RETRIEVE_BILLING_NAME,
i.  JBCTRL_SET_SELF_PERF_FLAG
);
end loop;
--commit;
Select count(1) into v_cnt from da.JBCTRL@&to_which_database
where jbctrl_comp_code not in ('ZZ');
dbms_output.put_line ('Inserted '||v_cnt||' records into JBCTRL table, check and commit.');
select count(1) into v_cnt_&to_which_database from da.JBCTRL@&to_which_database;
select count(1) into v_cnt_&from_which_database from da.JBCTRL@&from_which_database;
if v_cnt_&to_which_database - v_cnt_&from_which_database = 0
then
dbms_output.put_line ('Number of records in &to_which_database match with &from_which_database for JBCTRL table.');
else
dbms_output.put_line ('Number of records in &from_which_database does not match with &to_which_database for PYCOMPAYPRD table.');
Raise record_count_mismatch;
end if;
EXCEPTION
WHEN record_count_mismatch
THEN
DBMS_OUTPUT.PUT_LINE ('There is a mismatch in &from_which_database and &to_which_database for this table.');
WHEN OTHERS 
THEN
DBMS_OUTPUT.PUT_LINE ('ERROR WHILE INSERTING INTO da.JBCTRL@&to_which_database.');
DBMS_OUTPUT.PUT_LINE (SQLERRM);

end;
/ 