
declare

v_cnt      NUMBER;
v_cnt_conv NUMBER;
v_cnt_prod NUMBER;
record_count_mismatch exception;

begin
for i in
(
SELECT 
  CAT_COMP_CODE,
  CAT_CODE,
  CAT_CTRL_CODE,
  CAT_RATE,
  CAT_CC_ACC_CODE,
  CAT_WIP_ACC_CODE,
  CAT_LBC_ACC_CODE,
  CAT_BILL_ACC_CODE,
  CAT_LTC_ACC_CODE,
  CAT_WM_CODE,
  CAT_NAME,
  CAT_CHG_TYPE_CODE,
  CAT_CHG_RATE,
  CAT_OVERHEAD_TYPE_CODE,
  CAT_OVERHEAD_RATE,
  CAT_WBSV_CODE1,
  CAT_WBSV_CODE2,
  CAT_WBSV_CODE3,
  CAT_WBSV_CODE4,
  CAT_WBSV_CODE5,
  CAT_WBSV_CODE6,
  CAT_WBSV_CODE7,
  CAT_WBSV_CODE8,
  CAT_WBSV_CODE9,
  CAT_WBSV_CODE10,
  CAT_WBSV_CODE11,
  CAT_WBSV_CODE12,
  CAT_WBSV_REQUIRED_FLAG1,
  CAT_WBSV_REQUIRED_FLAG2,
  CAT_WBSV_REQUIRED_FLAG3,
  CAT_WBSV_REQUIRED_FLAG4,
  CAT_WBSV_REQUIRED_FLAG5,
  CAT_WBSV_REQUIRED_FLAG6,
  CAT_WBSV_REQUIRED_FLAG7,
  CAT_WBSV_REQUIRED_FLAG8,
  CAT_WBSV_REQUIRED_FLAG9,
  CAT_WBSV_REQUIRED_FLAG10,
  CAT_WBSV_REQUIRED_FLAG11,
  CAT_WBSV_REQUIRED_FLAG12,
  CAT_WBSV_EDITABLE_FLAG1,
  CAT_WBSV_EDITABLE_FLAG2,
  CAT_WBSV_EDITABLE_FLAG3,
  CAT_WBSV_EDITABLE_FLAG4,
  CAT_WBSV_EDITABLE_FLAG5,
  CAT_WBSV_EDITABLE_FLAG6,
  CAT_WBSV_EDITABLE_FLAG7,
  CAT_WBSV_EDITABLE_FLAG8,
  CAT_WBSV_EDITABLE_FLAG9,
  CAT_WBSV_EDITABLE_FLAG10,
  CAT_WBSV_EDITABLE_FLAG11,
  CAT_WBSV_EDITABLE_FLAG12,
  CAT_BILL_GROUP_CODE,
  CAT_UNBILLED_REV_ACC_CODE,
  CAT_HIER,
  CAT_DEFAULT_BUDMETH_CODE,
  CAT_DEFAULT_BILLING_TYPE,
  CAT_DEFAULT_INV_FORMAT_CODE,
  CAT_RESERVE_REV_ACC_CODE,
  CAT_NON_RECOVERABLE_FLAG,
  CAT_COST_TYPE_CODE,
  CAT_BUDGET_FLAG,
  CAT_COST_FLAG,
  CAT_BILLING_FLAG,
  CAT_JB_BACKUP_CAT_COLUMN_NUM,
  CAT_IB_ALTERNATE_WIP_ACC_CODE,
  CAT_ACTIVE_FLAG,
  --CAT__IU__CREATE_DATE,
  --CAT__IU__CREATE_USER,
  --CAT__IU__UPDATE_DATE,
  --CAT__IU__UPDATE_USER,
  CAT_ETIME_FLAG,
  CAT_AVAILABLE_ON_SC_FLAG--,
  --CAT_WBSV_PCI_LINE_ORASEQ
FROM DA.JCCAT@CONV
WHERE cat_comp_code NOT IN ('ZZ')
) loop
INSERT INTO DA.JCCAT
(  
  CAT_COMP_CODE,
  CAT_CODE,
  CAT_CTRL_CODE,
  CAT_RATE,
  CAT_CC_ACC_CODE,
  CAT_WIP_ACC_CODE,
  CAT_LBC_ACC_CODE,
  CAT_BILL_ACC_CODE,
  CAT_LTC_ACC_CODE,
  CAT_WM_CODE,
  CAT_NAME,
  CAT_CHG_TYPE_CODE,
  CAT_CHG_RATE,
  CAT_OVERHEAD_TYPE_CODE,
  CAT_OVERHEAD_RATE,
  CAT_WBSV_CODE1,
  CAT_WBSV_CODE2,
  CAT_WBSV_CODE3,
  CAT_WBSV_CODE4,
  CAT_WBSV_CODE5,
  CAT_WBSV_CODE6,
  CAT_WBSV_CODE7,
  CAT_WBSV_CODE8,
  CAT_WBSV_CODE9,
  CAT_WBSV_CODE10,
  CAT_WBSV_CODE11,
  CAT_WBSV_CODE12,
  CAT_WBSV_REQUIRED_FLAG1,
  CAT_WBSV_REQUIRED_FLAG2,
  CAT_WBSV_REQUIRED_FLAG3,
  CAT_WBSV_REQUIRED_FLAG4,
  CAT_WBSV_REQUIRED_FLAG5,
  CAT_WBSV_REQUIRED_FLAG6,
  CAT_WBSV_REQUIRED_FLAG7,
  CAT_WBSV_REQUIRED_FLAG8,
  CAT_WBSV_REQUIRED_FLAG9,
  CAT_WBSV_REQUIRED_FLAG10,
  CAT_WBSV_REQUIRED_FLAG11,
  CAT_WBSV_REQUIRED_FLAG12,
  CAT_WBSV_EDITABLE_FLAG1,
  CAT_WBSV_EDITABLE_FLAG2,
  CAT_WBSV_EDITABLE_FLAG3,
  CAT_WBSV_EDITABLE_FLAG4,
  CAT_WBSV_EDITABLE_FLAG5,
  CAT_WBSV_EDITABLE_FLAG6,
  CAT_WBSV_EDITABLE_FLAG7,
  CAT_WBSV_EDITABLE_FLAG8,
  CAT_WBSV_EDITABLE_FLAG9,
  CAT_WBSV_EDITABLE_FLAG10,
  CAT_WBSV_EDITABLE_FLAG11,
  CAT_WBSV_EDITABLE_FLAG12,
  CAT_BILL_GROUP_CODE,
  CAT_UNBILLED_REV_ACC_CODE,
  CAT_HIER,
  CAT_DEFAULT_BUDMETH_CODE,
  CAT_DEFAULT_BILLING_TYPE,
  CAT_DEFAULT_INV_FORMAT_CODE,
  CAT_RESERVE_REV_ACC_CODE,
  CAT_NON_RECOVERABLE_FLAG,
  CAT_COST_TYPE_CODE,
  CAT_BUDGET_FLAG,
  CAT_COST_FLAG,
  CAT_BILLING_FLAG,
  CAT_JB_BACKUP_CAT_COLUMN_NUM,
  CAT_IB_ALTERNATE_WIP_ACC_CODE,
  CAT_ACTIVE_FLAG,
  --CAT__IU__CREATE_DATE,
  --CAT__IU__CREATE_USER,
  --CAT__IU__UPDATE_DATE,
  --CAT__IU__UPDATE_USER,
  CAT_ETIME_FLAG,
  CAT_AVAILABLE_ON_SC_FLAG--,
  --CAT_WBSV_PCI_LINE_ORASEQ
)
values
(
i.  CAT_COMP_CODE,
i.  CAT_CODE,
i.  CAT_CTRL_CODE,
i.  CAT_RATE,
i.  CAT_CC_ACC_CODE,
i.  CAT_WIP_ACC_CODE,
i.  CAT_LBC_ACC_CODE,
i.  CAT_BILL_ACC_CODE,
i.  CAT_LTC_ACC_CODE,
i.  CAT_WM_CODE,
i.  CAT_NAME,
i.  CAT_CHG_TYPE_CODE,
i.  CAT_CHG_RATE,
i.  CAT_OVERHEAD_TYPE_CODE,
i.  CAT_OVERHEAD_RATE,
i.  CAT_WBSV_CODE1,
i.  CAT_WBSV_CODE2,
i.  CAT_WBSV_CODE3,
i.  CAT_WBSV_CODE4,
i.  CAT_WBSV_CODE5,
i.  CAT_WBSV_CODE6,
i.  CAT_WBSV_CODE7,
i.  CAT_WBSV_CODE8,
i.  CAT_WBSV_CODE9,
i.  CAT_WBSV_CODE10,
i.  CAT_WBSV_CODE11,
i.  CAT_WBSV_CODE12,
i.  CAT_WBSV_REQUIRED_FLAG1,
i.  CAT_WBSV_REQUIRED_FLAG2,
i.  CAT_WBSV_REQUIRED_FLAG3,
i.  CAT_WBSV_REQUIRED_FLAG4,
i.  CAT_WBSV_REQUIRED_FLAG5,
i.  CAT_WBSV_REQUIRED_FLAG6,
i.  CAT_WBSV_REQUIRED_FLAG7,
i.  CAT_WBSV_REQUIRED_FLAG8,
i.  CAT_WBSV_REQUIRED_FLAG9,
i.  CAT_WBSV_REQUIRED_FLAG10,
i.  CAT_WBSV_REQUIRED_FLAG11,
i.  CAT_WBSV_REQUIRED_FLAG12,
i.  CAT_WBSV_EDITABLE_FLAG1,
i.  CAT_WBSV_EDITABLE_FLAG2,
i.  CAT_WBSV_EDITABLE_FLAG3,
i.  CAT_WBSV_EDITABLE_FLAG4,
i.  CAT_WBSV_EDITABLE_FLAG5,
i.  CAT_WBSV_EDITABLE_FLAG6,
i.  CAT_WBSV_EDITABLE_FLAG7,
i.  CAT_WBSV_EDITABLE_FLAG8,
i.  CAT_WBSV_EDITABLE_FLAG9,
i.  CAT_WBSV_EDITABLE_FLAG10,
i.  CAT_WBSV_EDITABLE_FLAG11,
i.  CAT_WBSV_EDITABLE_FLAG12,
i.  CAT_BILL_GROUP_CODE,
i.  CAT_UNBILLED_REV_ACC_CODE,
i.  CAT_HIER,
i.  CAT_DEFAULT_BUDMETH_CODE,
i.  CAT_DEFAULT_BILLING_TYPE,
i.  CAT_DEFAULT_INV_FORMAT_CODE,
i.  CAT_RESERVE_REV_ACC_CODE,
i.  CAT_NON_RECOVERABLE_FLAG,
i.  CAT_COST_TYPE_CODE,
i.  CAT_BUDGET_FLAG,
i.  CAT_COST_FLAG,
i.  CAT_BILLING_FLAG,
i.  CAT_JB_BACKUP_CAT_COLUMN_NUM,
i.  CAT_IB_ALTERNATE_WIP_ACC_CODE,
i.  CAT_ACTIVE_FLAG,
--i.  --CAT__IU__CREATE_DATE,
--i.  --CAT__IU__CREATE_USER,
--i.  --CAT__IU__UPDATE_DATE,
--i.  --CAT__IU__UPDATE_USER,
i.  CAT_ETIME_FLAG,
i.  CAT_AVAILABLE_ON_SC_FLAG--,
--i.  CAT_WBSV_PCI_LINE_ORASEQ
);
end loop;
--commit;
select count(1) into v_cnt_conv from JCCAT@conv;
select count(1) into v_cnt_prod from JCCAT@prod;
if v_cnt_conv - v_cnt_prod = 0
then
dbms_output.put_line ('Number of records in PROD match with CONV for JCCAT table.');
else
dbms_output.put_line ('Number of records in PROD does not match with CONV for JCCAT table.');
Raise record_count_mismatch;
end if;
Select count(1) into v_cnt from DA.JCCAT@PROD where cat_comp_code NOT IN ('ZZ');
dbms_output.put_line ('Inserted '||v_cnt||' records into JCCAT table, check and commit.');
EXCEPTION
WHEN record_count_mismatch
THEN
DBMS_OUTPUT.PUT_LINE ('There is a mismatch in PROD and CONV for this table.');
WHEN OTHERS 
THEN
DBMS_OUTPUT.PUT_LINE ('ERROR WHILE INSERTING INTO DA.JCCAT.');
DBMS_OUTPUT.PUT_LINE (SQLERRM);

end;
/ 